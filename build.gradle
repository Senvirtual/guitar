group 'Test'
version '1.0'

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.5

configurations {
    mybatisGenerator
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    def springVersion = "4.3.7.RELEASE"
    def mybatisVersion = "3.2.6"
    def log4jVersion = "1.2.17"


    // Spring依赖
    compile("org.springframework:spring-aop:$springVersion",
            "org.springframework:spring-orm:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.springframework:spring-instrument-tomcat:$springVersion",
            "org.springframework:spring-instrument:$springVersion",
            "org.springframework:spring-framework-bom:$springVersion",
            "org.springframework:spring-expression:$springVersion",
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-context-support:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-beans:$springVersion",
            "org.springframework:spring-aspects:$springVersion",
            "org.springframework:spring-test:$springVersion",
            "org.springframework:spring-tx:$springVersion",
            "org.springframework:spring-web:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-webmvc-portlet:$springVersion")

    //mybaits
    compile group: 'org.mybatis', name: 'mybatis', version: mybatisVersion
    //mybaits-spring
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.2.2'

    //java ee jar 包
    compile group: 'javax', name: 'javaee-api', version: '7.0'

    //MyBatis Generator 逆向生成代码
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.5'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile group: 'tk.mybatis', name: 'mapper', version: '3.3.9'


    //数据库链接
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'

    //阿里巴巴开源json处理
    //compile group: 'com.alibaba', name: 'fastjson', version: '1.2.7'

    //映入json
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.7'
    //compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'

    //jstl标签
    compile group: 'jstl', name: 'jstl', version: '1.2'

    //日志
    compile("log4j:log4j:$log4jVersion",
            "org.slf4j:slf4j-api:1.7.21",
            "org.slf4j:slf4j-log4j12:1.7.21")

    //上传组建包
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'


    compile group: 'junit', name: 'junit', version: '4.12'

    //MyBatis Generator 逆向生成代码
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.6'
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties;
}
task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driver")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
    ant.properties['tableName'] = properties.getProperty("package.tableName")
    ant.properties['entityName'] = properties.getProperty("package.entityName")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
            propertyref(name: 'tableName')
            propertyref(name: 'entityName')
        }
    }
}